buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

group = 'com.idea.example'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	//Redis分布式客户端
	compile('org.redisson:redisson:3.6.1')
	//Sentry 通过统一的接口收集、并且提供跟踪、管理(主要是错误日志)
	compile('com.getsentry.raven:raven-logback:8.0.3')
	compile('org.springframework.boot:spring-boot-starter-logging:1.5.10.RELEASE')
	//消息队列Activemq
	compile('org.springframework.boot:spring-boot-starter-activemq')
	//消息队列RabbitMQ
	compile('org.springframework.boot:spring-boot-starter-amqp')
	//数据持久层框架
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	//Redis(Nosql)
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	//Feign
	compile('org.springframework.cloud:spring-cloud-starter-feign:1.4.3.RELEASE')
	compile('com.netflix.feign:feign-httpclient:8.18.0')
	compile('com.netflix.feign:feign-slf4j:8.18.0')
	compile('com.netflix.feign:feign-gson:8.18.0')
	//Gson
	compile('com.google.code.gson:gson:2.8.2')

	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('mysql:mysql-connector-java')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	compileOnly('org.projectlombok:lombok')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
/*
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.data:spring-data-rest-hal-browser')
	compile('org.springframework.session:spring-session-data-redis')
	compile('org.springframework.session:spring-session-jdbc')
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.security:spring-security-test')
}
* */